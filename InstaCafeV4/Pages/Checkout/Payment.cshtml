@page
@model InstaCafeV4.Pages.Checkout.PaymentModel
@{

}

<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />


<link rel="stylesheet" href="~/css/open-iconic-bootstrap.min.css">
<link rel="stylesheet" href="~/css/animate.css">


<environment include="Development">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/combine/npm/bulma@0.9.2/css/bulma.min.css,npm/bulma@0.9.2/css/bulma.min.css">
</environment>
<environment include="Production">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.2/css/bulma.min.css">
</environment>

<section class="home-slider owl-carousel">

    <div class="slider-item" style="background-image: url(~/Images/bg_3.jpg);" data-stellar-background-ratio="0.5">
        <div class="overlay"></div>
        <div class="container">
            <div class="row slider-text justify-content-center align-items-center">

                <div class="col-md-7 col-sm-12 text-center ftco-animate">
                    <h1 class="mb-3 mt-5 bread">Payment Detail</h1>
                    <p class="breadcrumbs"><span class="mr-2"><a asp-page="Index">Home</a></span> <span>Payment Detail</span></p>
                </div>

            </div>
        </div>
    </div>
</section>

<div class="container">
    <div class=" col-xl-8 ftco-animate" >
        <p class="title text-center" >Enter your Card Details </p>
        <form method="post" id="payment-form"   class="form-control billing-form p-3 p-md-5">
            
            <span class="field">
                <div class="form-row">
                    <div id="card-element" class="form-control">

                    </div>


                    <div id="card-errors" role="alert"></div>
                </div>
            </span>
            <span class="field align-content-center">
                <button class="button is-success " style="">Pay</button>
            </span>
        </form>

    </div>
    <div class="column is-6">
        <vc:cart view="Default"></vc:cart>
    </div>
</div>

@section scripts {
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        // Create a Stripe client.
        var stripe = Stripe('@Model.PublicKey');

        // Create an instance of Elements.
        var elements = stripe.elements();

        // Custom styling can be passed to options when creating an Element.
        // (Note that this demo uses a wider set of styles than the guide below.)
        var style = {
            base: {
                color: '#32325d',
                lineHeight: '18px',
                fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                fontSmoothing: 'antialiased',
                fontSize: '16px',
                '::placeholder': {
                    color: '#aab7c4'
                }
            },
            invalid: {
                color: '#fa755a',
                iconColor: '#fa755a'
            }
        };

        // Create an instance of the card Element.
        var card = elements.create('card', { style: style });

        // Add an instance of the card Element into the `card-element` <div>.
        card.mount('#card-element');

        // Handle real-time validation errors from the card Element.
        card.addEventListener('change', function (event) {
            var displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });

        // Handle form submission.
        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function (event) {
            event.preventDefault();

            stripe.createToken(card).then(function (result) {
                if (result.error) {
                    // Inform the user if there was an error.
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    // Send the token to your server.
                    alert("Your payment was successful!");
                    stripeTokenHandler(result.token);
                }
            });
        });

        // Submit the form with the token ID.
        function stripeTokenHandler(token) {
            // Insert the token ID into the form so it gets submitted to the server
            var form = document.getElementById('payment-form');
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'stripeToken');
            hiddenInput.setAttribute('value', token.id);
            form.appendChild(hiddenInput);

            // Submit the form
            form.submit();
        }
    </script>
}